#!/usr/bin/env node
import {b}from'../chunk-5VUAD25I.js';import o from'fs';import n from'path';var a=process.argv.slice(2),c=a.includes("--json");function f(){let i=process.cwd(),s=n.join(i,c?"codefather.json":"codefather.ts"),t=n.join(i,"package.json");if(o.existsSync(s)?console.log(b.info,`- A ${n.basename(s)} file already exists.`):(c?o.writeFileSync(s,JSON.stringify({rules:[]},null,2)):o.writeFileSync(s,`import type { CodefatherConfig } from "codefather";

export default { rules: [] } satisfies CodefatherConfig;
`),console.log(b.info,`- A ${n.basename(s)} config file has been created.`)),o.existsSync(t)){let r=JSON.parse(o.readFileSync(t,"utf-8"));r.scripts=r.scripts||{},r.scripts.codefather?console.log(b.info,"- A codefather script already exist in your package.json."):(r.scripts.codefather="codefather",o.writeFileSync(t,JSON.stringify(r,null,2)),console.log(b.info,"- A codefather script has been added to your package.json."));}else return console.log(b.error,"\u26A0\uFE0F No package.json found in project root. Skipping script setup.");return console.log(b.success,"\n\u2713 Setup complete. Run `npm run codefather` to enforce your rules.")}import.meta.url===new URL(import.meta.url).href&&f();export{f as runInit};